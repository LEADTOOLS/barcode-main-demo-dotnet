<?xml version="1.0" encoding="utf-8"?>
<root>
   <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
   <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
      <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
      <xsd:element name="root" msdata:IsDataSet="true">
         <xsd:complexType>
            <xsd:choice maxOccurs="unbounded">
               <xsd:element name="metadata">
                  <xsd:complexType>
                     <xsd:sequence>
                        <xsd:element name="value" type="xsd:string" minOccurs="0" />
                     </xsd:sequence>
                     <xsd:attribute name="name" use="required" type="xsd:string" />
                     <xsd:attribute name="type" type="xsd:string" />
                     <xsd:attribute name="mimetype" type="xsd:string" />
                     <xsd:attribute ref="xml:space" />
                  </xsd:complexType>
               </xsd:element>
               <xsd:element name="assembly">
                  <xsd:complexType>
                     <xsd:attribute name="alias" type="xsd:string" />
                     <xsd:attribute name="name" type="xsd:string" />
                  </xsd:complexType>
               </xsd:element>
               <xsd:element name="data">
                  <xsd:complexType>
                     <xsd:sequence>
                        <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                        <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                     </xsd:sequence>
                     <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                     <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                     <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                     <xsd:attribute ref="xml:space" />
                  </xsd:complexType>
               </xsd:element>
               <xsd:element name="resheader">
                  <xsd:complexType>
                     <xsd:sequence>
                        <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                     </xsd:sequence>
                     <xsd:attribute name="name" type="xsd:string" use="required" />
                  </xsd:complexType>
               </xsd:element>
            </xsd:choice>
         </xsd:complexType>
      </xsd:element>
   </xsd:schema>
   <resheader name="resmimetype">
      <value>text/microsoft-resx</value>
   </resheader>
   <resheader name="version">
      <value>2.0</value>
   </resheader>
   <resheader name="reader">
      <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
   <resheader name="writer">
      <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
   <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
   <data name="_okButton.Location" type="System.Drawing.Point, System.Drawing">
      <value>496, 301</value>
   </data>
   <data name="_okButton.Size" type="System.Drawing.Size, System.Drawing">
      <value>75, 23</value>
   </data>
   <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
   <data name="_okButton.TabIndex" type="System.Int32, mscorlib">
      <value>8</value>
   </data>
   <data name="_okButton.Text" xml:space="preserve">
    <value>OK</value>
  </data>
   <data name="&gt;&gt;_okButton.Name" xml:space="preserve">
    <value>_okButton</value>
  </data>
   <data name="&gt;&gt;_okButton.Type" xml:space="preserve">
    <value>System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
   <data name="&gt;&gt;_okButton.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
   <data name="&gt;&gt;_okButton.ZOrder" xml:space="preserve">
    <value>10</value>
  </data>
   <data name="_cancelButton.Location" type="System.Drawing.Point, System.Drawing">
      <value>415, 301</value>
   </data>
   <data name="_cancelButton.Size" type="System.Drawing.Size, System.Drawing">
      <value>75, 23</value>
   </data>
   <data name="_cancelButton.TabIndex" type="System.Int32, mscorlib">
      <value>7</value>
   </data>
   <data name="_cancelButton.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
   <data name="&gt;&gt;_cancelButton.Name" xml:space="preserve">
    <value>_cancelButton</value>
  </data>
   <data name="&gt;&gt;_cancelButton.Type" xml:space="preserve">
    <value>System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
   <data name="&gt;&gt;_cancelButton.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
   <data name="&gt;&gt;_cancelButton.ZOrder" xml:space="preserve">
    <value>9</value>
  </data>
   <data name="_titleLabel.Location" type="System.Drawing.Point, System.Drawing">
      <value>13, 13</value>
   </data>
   <data name="_titleLabel.Size" type="System.Drawing.Size, System.Drawing">
      <value>727, 54</value>
   </data>
   <data name="_titleLabel.TabIndex" type="System.Int32, mscorlib">
      <value>0</value>
   </data>
   <data name="_titleLabel.Text" xml:space="preserve">
    <value>The current options did not read the barcode(s) you are interested in. You can try enabling one of the following and try again. Note that you can changes these options for individual or all symbologies through the Read Barcodes Options dialog. If using any of these options fixes the problem, you can go back and fine tune the read options.</value>
  </data>
   <data name="&gt;&gt;_titleLabel.Name" xml:space="preserve">
    <value>_titleLabel</value>
  </data>
   <data name="&gt;&gt;_titleLabel.Type" xml:space="preserve">
    <value>System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
   <data name="&gt;&gt;_titleLabel.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
   <data name="&gt;&gt;_titleLabel.ZOrder" xml:space="preserve">
    <value>8</value>
  </data>
   <data name="_allSymbologiesCheckBox.AutoSize" type="System.Boolean, mscorlib">
      <value>True</value>
   </data>
   <data name="_allSymbologiesCheckBox.Location" type="System.Drawing.Point, System.Drawing">
      <value>40, 70</value>
   </data>
   <data name="_allSymbologiesCheckBox.Size" type="System.Drawing.Size, System.Drawing">
      <value>244, 17</value>
   </data>
   <data name="_allSymbologiesCheckBox.TabIndex" type="System.Int32, mscorlib">
      <value>1</value>
   </data>
   <data name="_allSymbologiesCheckBox.Text" xml:space="preserve">
    <value>&amp;Retry using all supported barcode symbologies</value>
  </data>
   <data name="&gt;&gt;_allSymbologiesCheckBox.Name" xml:space="preserve">
    <value>_allSymbologiesCheckBox</value>
  </data>
   <data name="&gt;&gt;_allSymbologiesCheckBox.Type" xml:space="preserve">
    <value>System.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
   <data name="&gt;&gt;_allSymbologiesCheckBox.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
   <data name="&gt;&gt;_allSymbologiesCheckBox.ZOrder" xml:space="preserve">
    <value>7</value>
  </data>
   <data name="_allSymbologiesLabel.Location" type="System.Drawing.Point, System.Drawing">
      <value>37, 90</value>
   </data>
   <data name="_allSymbologiesLabel.Size" type="System.Drawing.Size, System.Drawing">
      <value>703, 21</value>
   </data>
   <data name="_allSymbologiesLabel.TabIndex" type="System.Int32, mscorlib">
      <value>2</value>
   </data>
   <data name="_allSymbologiesLabel.Text" xml:space="preserve">
    <value>If not all supported barcode symbologies were used in trying to read the barcodes. Select this option to retry reading using all supported symbologies.</value>
  </data>
   <data name="&gt;&gt;_allSymbologiesLabel.Name" xml:space="preserve">
    <value>_allSymbologiesLabel</value>
  </data>
   <data name="&gt;&gt;_allSymbologiesLabel.Type" xml:space="preserve">
    <value>System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
   <data name="&gt;&gt;_allSymbologiesLabel.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
   <data name="&gt;&gt;_allSymbologiesLabel.ZOrder" xml:space="preserve">
    <value>6</value>
  </data>
   <data name="_directionLabel.Location" type="System.Drawing.Point, System.Drawing">
      <value>37, 142</value>
   </data>
   <data name="_directionLabel.Size" type="System.Drawing.Size, System.Drawing">
      <value>703, 22</value>
   </data>
   <data name="_directionLabel.TabIndex" type="System.Int32, mscorlib">
      <value>4</value>
   </data>
   <data name="_directionLabel.Text" xml:space="preserve">
    <value>The previous read operation did not use search for barcodes in both horizontal and vertical direction. Use this option if the barcode(s) is rotated.</value>
  </data>
   <data name="&gt;&gt;_directionLabel.Name" xml:space="preserve">
    <value>_directionLabel</value>
  </data>
   <data name="&gt;&gt;_directionLabel.Type" xml:space="preserve">
    <value>System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
   <data name="&gt;&gt;_directionLabel.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
   <data name="&gt;&gt;_directionLabel.ZOrder" xml:space="preserve">
    <value>4</value>
  </data>
   <data name="_directionCheckBox.AutoSize" type="System.Boolean, mscorlib">
      <value>True</value>
   </data>
   <data name="_directionCheckBox.Location" type="System.Drawing.Point, System.Drawing">
      <value>40, 122</value>
   </data>
   <data name="_directionCheckBox.Size" type="System.Drawing.Size, System.Drawing">
      <value>306, 17</value>
   </data>
   <data name="_directionCheckBox.TabIndex" type="System.Int32, mscorlib">
      <value>3</value>
   </data>
   <data name="_directionCheckBox.Text" xml:space="preserve">
    <value>R&amp;etry by searching for both horizontal and vertical barcodes</value>
  </data>
   <data name="&gt;&gt;_directionCheckBox.Name" xml:space="preserve">
    <value>_directionCheckBox</value>
  </data>
   <data name="&gt;&gt;_directionCheckBox.Type" xml:space="preserve">
    <value>System.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
   <data name="&gt;&gt;_directionCheckBox.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
   <data name="&gt;&gt;_directionCheckBox.ZOrder" xml:space="preserve">
    <value>5</value>
  </data>
   <data name="label1.Location" type="System.Drawing.Point, System.Drawing">
      <value>37, 191</value>
   </data>
   <data name="label1.Size" type="System.Drawing.Size, System.Drawing">
      <value>703, 43</value>
   </data>
   <data name="label1.TabIndex" type="System.Int32, mscorlib">
      <value>6</value>
   </data>
   <data name="label1.Text" xml:space="preserve">
    <value>The double-pass option will enable performing image cleanup internally by the barcode engine when trying to read 2D barcodes. This is useful if the image contains "broken" or not clear barcodes. The image will be read twice even if barcodes are found in the first pass. Keep in mind that this may affect the read operation performance.</value>
  </data>
   <data name="&gt;&gt;label1.Name" xml:space="preserve">
    <value>label1</value>
  </data>
   <data name="&gt;&gt;label1.Type" xml:space="preserve">
    <value>System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
   <data name="&gt;&gt;label1.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
   <data name="&gt;&gt;label1.ZOrder" xml:space="preserve">
    <value>2</value>
  </data>
   <data name="_doublePassCheckBox.AutoSize" type="System.Boolean, mscorlib">
      <value>True</value>
   </data>
   <data name="_doublePassCheckBox.Location" type="System.Drawing.Point, System.Drawing">
      <value>40, 171</value>
   </data>
   <data name="_doublePassCheckBox.Size" type="System.Drawing.Size, System.Drawing">
      <value>241, 17</value>
   </data>
   <data name="_doublePassCheckBox.TabIndex" type="System.Int32, mscorlib">
      <value>5</value>
   </data>
   <data name="_doublePassCheckBox.Text" xml:space="preserve">
    <value>Re&amp;try reading 2D barcodes using double-pass</value>
  </data>
   <data name="&gt;&gt;_doublePassCheckBox.Name" xml:space="preserve">
    <value>_doublePassCheckBox</value>
  </data>
   <data name="&gt;&gt;_doublePassCheckBox.Type" xml:space="preserve">
    <value>System.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
   <data name="&gt;&gt;_doublePassCheckBox.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
   <data name="&gt;&gt;_doublePassCheckBox.ZOrder" xml:space="preserve">
    <value>3</value>
  </data>
   <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
   <data name="label2.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms">
      <value>NoControl</value>
   </data>
   <data name="label2.Location" type="System.Drawing.Point, System.Drawing">
      <value>37, 262</value>
   </data>
   <data name="label2.Size" type="System.Drawing.Size, System.Drawing">
      <value>703, 30</value>
   </data>
   <data name="label2.TabIndex" type="System.Int32, mscorlib">
      <value>10</value>
   </data>
   <data name="label2.Text" xml:space="preserve">
    <value>Use this option to enable additional image processing techniques to be used internally by the barcode engine. This is useful when accuracy is more important than speed as this will slow down the recognition of all barcodes.</value>
  </data>
   <data name="&gt;&gt;label2.Name" xml:space="preserve">
    <value>label2</value>
  </data>
   <data name="&gt;&gt;label2.Type" xml:space="preserve">
    <value>System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
   <data name="&gt;&gt;label2.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
   <data name="&gt;&gt;label2.ZOrder" xml:space="preserve">
    <value>0</value>
  </data>
   <data name="_imagePreprocessingCheckBox.AutoSize" type="System.Boolean, mscorlib">
      <value>True</value>
   </data>
   <data name="_imagePreprocessingCheckBox.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms">
      <value>NoControl</value>
   </data>
   <data name="_imagePreprocessingCheckBox.Location" type="System.Drawing.Point, System.Drawing">
      <value>40, 242</value>
   </data>
   <data name="_imagePreprocessingCheckBox.Size" type="System.Drawing.Size, System.Drawing">
      <value>179, 17</value>
   </data>
   <data name="_imagePreprocessingCheckBox.TabIndex" type="System.Int32, mscorlib">
      <value>9</value>
   </data>
   <data name="_imagePreprocessingCheckBox.Text" xml:space="preserve">
    <value>Retr&amp;y using image preprocessing</value>
  </data>
   <data name="&gt;&gt;_imagePreprocessingCheckBox.Name" xml:space="preserve">
    <value>_imagePreprocessingCheckBox</value>
  </data>
   <data name="&gt;&gt;_imagePreprocessingCheckBox.Type" xml:space="preserve">
    <value>System.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
   <data name="&gt;&gt;_imagePreprocessingCheckBox.Parent" xml:space="preserve">
    <value>$this</value>
  </data>
   <data name="&gt;&gt;_imagePreprocessingCheckBox.ZOrder" xml:space="preserve">
    <value>1</value>
  </data>
   <metadata name="$this.Localizable" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <value>True</value>
   </metadata>
   <data name="$this.AutoScaleDimensions" type="System.Drawing.SizeF, System.Drawing">
      <value>6, 13</value>
   </data>
   <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
      <value>744, 339</value>
   </data>
   <data name="$this.StartPosition" type="System.Windows.Forms.FormStartPosition, System.Windows.Forms">
      <value>CenterParent</value>
   </data>
   <data name="$this.Text" xml:space="preserve">
    <value>Extra Read Barcodes Options</value>
  </data>
   <data name="&gt;&gt;$this.Name" xml:space="preserve">
    <value>ReadBarcodeExtraDialogBox</value>
  </data>
   <data name="&gt;&gt;$this.Type" xml:space="preserve">
    <value>System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
</root>